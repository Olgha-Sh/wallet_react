{"version":3,"sources":["redux/types.js","redux/transactions/action.js","components/Loader/index.jsx","components/App/index.jsx","redux/auth/reducer.js","redux/error/reducer.js","redux/transactions/transactionsReducers/transactionsReducer.js","redux/transactions/transactionsReducers/transactionsErrorReducer.js","redux/transactions/transactionsReducers/transactionsLoaderReducer.js","redux/transactions/transactionsReducers/transactionsFilterReducer.js","redux/transactions/transactionsReducers/transactionCategories.js","redux/transactions/transactionsReducers/transactionsRootReducer.js","redux/rootReducers.js","redux/store.js","index.jsx","routes/index.js","redux/staticstics/statisticsActions.js","services/notification.js","services/api.js","redux/auth/selectors.js","redux/auth/operations.js","redux/staticstics/statisticsReducer.js","HOC/PrivateRoute.js","redux/error/selectors.js","components/Notifications/Error/index.jsx"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_FAILURE","GET_CURRENT_USER_START","GET_CURRENT_USER_SUCCESS","GET_CURRENT_USER_FAILURE","ADD_TRANSACTION","ADD_SUCCESS","ADD_FAILURE","GET_TRANSACTION","GET_TRANSACTION_CATEGORIES_SUCCESS","GET_SUCCESS","GET_FAILURE","GET_ALL_TRANSACTIONS_FROM_BACK","DELETE_TRANSACTION_SUCCESS","EDIT_TRANSACTION","LOADER_ON","LOADER_OFF","SET_ERROR","RESET_ERROR","FILTER_ALL","FILTER_INCOMES","FILTER_EXPENCES","FILTER_TRANSACTIONS_BY_INCOMES","FILTER_TRANSACTIONS_BY_EXPENCES","addTransaction","createAction","types","deleteTransaction","editTransaction","getAllTransactionsFromBack","getCategories","setError","loaderON","loaderOFF","filterALL","filterIncomes","filterExpences","Loader","App","dispatch","useDispatch","authLoading","useSelector","authSelectors","getLoading","useEffect","authOperations","loading","fallback","exact","path","routes","LOGIN","component","REGISTER","PrivateRoute","NAVIGATION","to","HOME","Error","combineReducers","user","state","type","payload","token","balance","balanceAfter","errorsInfo","transactionReducer","createReducer","action","filter","transaction","id","map","transactionErrorReducer","transactionsLoaderReducer","transactionFilterReducer","transactionCategories","transactionsRootReducer","items","loader","error","categoris","authConfig","key","storage","whitelist","rootReducers","auth","persistReducer","authReducer","transactions","errors","errorsReducer","statistics","statististicsReducer","enhancer","applyMiddleware","thunk","store","createStore","rootReducer","persistor","persistStore","Index","ReactDOM","render","document","getElementById","lazy","STATISTIC","CURRENCY","transactionsSummaryRequest","transactionsSummarySuccess","transactionsSummaryError","allTransactionsRequest","allTransactionsSuccess","allTransactionsError","notification","message","title","timeOut","callback","priority","NotificationManager","toLowerCase","axios","defaults","baseURL","login","data","post","register","getCurrentUser","get","logout","delete","add","isAuthenticated","getUser","getBalance","authToken","headers","common","Authorization","logIn","history","a","API","status","push","response","credentials","getState","persistedToken","logOut","transactionsSummary","statisticsActions","_","allTransactions","Component","errorsSelectors"],"mappings":"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","file":"static/js/main.325a895a.chunk.js","sourcesContent":["export default {\n  // -----// LOGIN //-----//\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  // ----- // SIGNUP // ----- //\n  SIGNUP_START: 'SIGNUP_START',\n  SIGNUP_SUCCESS: 'SIGNUP_SUCCESS',\n  SIGNUP_FAILURE: 'SIGNUP_FAILURE',\n  // -----// LOGOUT //-----//\n  LOGOUT_START: 'LOGOUT_START',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_FAILURE: 'LOGOUT_FAILURE',\n  // -----// CURRENT_USER //-----//\n  GET_CURRENT_USER_START: 'GET_CURRENT_USER_START',\n  GET_CURRENT_USER_SUCCESS: 'GET_CURRENT_USER_SUCCESS',\n  GET_CURRENT_USER_FAILURE: 'GET_CURRENT_USER_FAILURE',\n  // -----// TRANSACTIONS //-----//\n  ADD_TRANSACTION: 'ADD_TRANSACTION',\n  ADD_SUCCESS: 'ADD_SUCCESS',\n  ADD_FAILURE: 'ADD_FAILURE',\n  GET_TRANSACTION: 'GET_TRANSACTION',\n  GET_TRANSACTION_CATEGORIES_SUCCESS: 'GET_TRANSACTION_CATEGORIES_SUCCESS',\n  GET_SUCCESS: 'GET_SUCCESS',\n  GET_FAILURE: 'GET_FAILURE',\n  GET_ALL_TRANSACTIONS_FROM_BACK: 'GET_ALL_TRANSACTIONS_FROM_BACK',\n  DELETE_TRANSACTION_SUCCESS: 'DELETE_TRANSACTION',\n  EDIT_TRANSACTION: 'EDIT_TRANSACTION',\n  LOADER_ON: 'TRANSACTION_LOADER_ON',\n  LOADER_OFF: 'TRANSACTION_LOADER_OFF',\n  SET_ERROR: 'TRANSACTION_SET__ERROR',\n  RESET_ERROR: 'TRANSACTION_SET__ERROR',\n  FILTER_ALL: 'TRANSACTION_FILTER_ALL',\n  FILTER_INCOMES: 'TRANSACTION_FILTER_INCOMES',\n  FILTER_EXPENCES: 'TRANSACTION_FILTER_EXPENCES',\n  FILTER_TRANSACTIONS_BY_INCOMES: 'FILTER_TRANSACTIONS_BY_INCOMES',\n  FILTER_TRANSACTIONS_BY_EXPENCES: 'FILTER_TRANSACTIONS_BY_EXPENCES',\n};\n","import types from '../types';\nimport { createAction, createSelector } from '@reduxjs/toolkit';\n\nconst addTransaction = createAction(types.ADD_SUCCESS);\n\nconst deleteTransaction = createAction(types.DELETE_TRANSACTION_SUCCESS);\n\nconst editTransaction = createAction(types.EDIT_TRANSACTION);\n\nconst getAllTransactionsFromBack = createAction(\n  types.GET_ALL_TRANSACTIONS_FROM_BACK,\n);\nconst getCategories = createAction(types.GET_TRANSACTION_CATEGORIES_SUCCESS);\nconst setError = createAction(types.SET_ERROR);\n\nconst resetError = createAction(types.RESET_ERROR);\n\nconst loaderON = createAction(types.LOADER_ON);\n\nconst loaderOFF = createAction(types.LOADER_OFF);\n\nconst filterALL = createAction(types.FILTER_ALL);\n\nconst filterIncomes = createAction(types.FILTER_INCOMES);\n\nconst filterExpences = createAction(types.FILTER_EXPENCES);\n\nexport {\n  addTransaction,\n  deleteTransaction,\n  editTransaction,\n  setError,\n  resetError,\n  loaderON,\n  loaderOFF,\n  filterALL,\n  filterIncomes,\n  filterExpences,\n  getAllTransactionsFromBack,\n  getCategories,\n};\n","import React from 'react';\nimport { CommonLoading } from 'react-loadingg';\n\nconst Loader = () => <CommonLoading />;\nexport default Loader;\n","import React, { StrictMode, Suspense, useEffect } from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as authOperations from '../../redux/auth/operations';\nimport authSelectors from '../../redux/auth/selectors';\nimport ErrorNotification from '../Notifications/Error';\nimport Loader from '../Loader';\nimport routes from '../../routes';\nimport PrivateRoute from '../../HOC/PrivateRoute';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authLoading = useSelector(authSelectors.getLoading);\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, []);\n  const loading = authLoading;\n\n  return (\n    <>\n      {/* <StrictMode> */}\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route\n            exact\n            path={routes.LOGIN.path}\n            component={routes.LOGIN.component}\n          />\n          <Route\n            exact\n            path={routes.REGISTER.path}\n            component={routes.REGISTER.component}\n          />\n          <PrivateRoute\n            path={routes.NAVIGATION.path}\n            component={routes.NAVIGATION.component}\n          />\n          <Redirect to={routes.HOME.path} />\n        </Switch>\n        {loading && <Loader />}\n        <ErrorNotification />\n      </Suspense>\n      {/* </StrictMode> */}\n    </>\n  );\n};\n\nexport default App;\n// {' '}\n// {routes.map(route => {\n//   return route.private ? (\n//     <PrivateRoute key={route.path} {...route} />\n//   ) : (\n//     <PublicRoutes\n//       key={route.path}\n//       {...route}\n//       restricted={route.restricted}\n//     />\n//   );\n// })}\n","import { combineReducers } from 'redux';\nimport types from '../types';\n\nconst user = (state = null, { type, payload }) => {\n  switch (type) {\n    case types.LOGIN_SUCCESS:\n      return { ...state, ...payload.user };\n    case types.SIGNUP_SUCCESS:\n      return { ...state, ...payload.user };\n    case types.GET_CURRENT_USER_SUCCESS:\n      return { ...state, ...payload };\n    case types.LOGOUT_SUCCESS:\n      return null;\n    case types.LOGOUT_FAILURE:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nconst token = (state = null, { type, payload }) => {\n  switch (type) {\n    case types.LOGIN_SUCCESS:\n      return payload.token;\n    case types.SIGNUP_SUCCESS:\n      return payload.token;\n    case types.LOGOUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nconst balance = (state = 0, { type, payload }) => {\n  switch (type) {\n    case types.GET_CURRENT_USER_SUCCESS:\n      return payload.balance;\n    case types.ADD_SUCCESS:\n      return payload.balanceAfter;\n    case types.LOGIN_SUCCESS:\n      return payload.user.balance;\n    case types.LOGOUT_SUCCESS:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = false, { type }) => {\n  switch (type) {\n    case types.LOGIN_START:\n      return true;\n    case types.LOGIN_SUCCESS:\n      return false;\n    case types.LOGIN_FAILURE:\n      return false;\n\n    case types.SIGNUP_START:\n      return true;\n    case types.SIGNUP_SUCCESS:\n      return false;\n    case types.SIGNUP_FAILURE:\n      return false;\n\n    case types.LOGOUT_START:\n      return true;\n    case types.LOGOUT_SUCCESS:\n      return false;\n    case types.LOGOUT_FAILURE:\n      return false;\n\n    case types.GET_CURRENT_USER_START:\n      return true;\n    case types.GET_CURRENT_USER_SUCCESS:\n      return false;\n    case types.GET_CURRENT_USER_FAILURE:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ user, token, loading, balance });\n","import { combineReducers } from 'redux';\nimport types from '../types';\n\nconst errorsInfo = (state = null, { type, payload }) => {\n  switch (type) {\n    case types.LOGIN_FAILURE:\n      return payload;\n    case types.SIGNUP_FAILURE:\n      return payload;\n    case types.LOGOUT_FAILURE:\n      return payload;\n    case types.GET_CURRENT_USER_FAILURE:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default errorsInfo;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addTransaction,\n  deleteTransaction,\n  editTransaction,\n  getAllTransactionsFromBack,\n} from '../action';\nimport { combineReducers } from 'redux';\n\nconst initialState = [];\nconst transactionReducer = createReducer(initialState, {\n  [addTransaction]: (state, action) => {\n    return [action.payload, ...state];\n  },\n\n  [getAllTransactionsFromBack]: (state, action) => {\n    return [...action.payload];\n  },\n  [deleteTransaction]: (state, action) => {\n    return [...state.filter(transaction => transaction.id !== action.payload)];\n  },\n\n  [editTransaction]: (state, action) => {\n    const newArrTransactions = [\n      ...state.map(transaction => {\n        if (transaction.id === action.payload.id) {\n          return action.payload;\n        }\n        return transaction;\n      }),\n    ];\n\n    return newArrTransactions;\n    // return [\n    //   ...state.filter(transaction => {\n    //     if (transaction.id === action.payload.id) {\n    //       return action.payload;\n    //     }\n    //     return transaction.id !== action.payload.id;\n    //   }),\n    // ];\n  },\n});\n\nexport default transactionReducer;\n","// import { createReducer } from '@reduxjs/toolkit';\n// import { setError, resetError } from '../action';\nimport types from '../../types';\n\n// const initialState = '';\n// const transactionErrorReducer = createReducer(initialState, {\n//   [setError]: (state, {payload}) => {\n//     console.log('payload', payload)\n//     return  {state:payload}\n//   },\n\n//   [resetError]: (state, action) => {\n//     return '';\n//   },\n// });\n\nconst transactionErrorReducer = (state = '', action) => {\n  switch (action.type) {\n    case types.SET_ERROR:\n      return action.payload;\n    case types.RESET_ERROR:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default transactionErrorReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { loaderOFF, loaderON } from '../action';\n\nconst initialState = false;\nconst transactionsLoaderReducer = createReducer(initialState, {\n  [loaderON]: (state, action) => {\n    return true;\n  },\n\n  [loaderOFF]: (state, action) => {\n    return false;\n  },\n});\nexport default transactionsLoaderReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterALL, filterExpences, filterIncomes } from '../action';\n\nconst initialState = 'allTransactions';\n\nconst transactionFilterReducer = createReducer(initialState, {\n  [filterALL]: (state, action) => {\n    return action.payload;\n  },\n\n  [filterExpences]: (state, action) => {\n    return action.payload;\n  },\n  [filterIncomes]: (state, action) => {\n    return action.payload;\n  },\n});\n\nexport default transactionFilterReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { getCategories } from '../action';\n\nconst initialState = [];\nconst transactionCategories = createReducer(initialState, {\n  [getCategories]: (state, action) => {\n    return [...action.payload];\n  },\n});\n\nexport default transactionCategories;\n","import { combineReducers } from 'redux';\n\nimport transactionReducer from './transactionsReducer';\nimport transactionErrorReducer from './transactionsErrorReducer';\nimport transactionsLoaderReducer from './transactionsLoaderReducer';\nimport transactionFilterReducer from './transactionsFilterReducer';\nimport transactionCategories from './transactionCategories';\n\nconst transactionsRootReducer = combineReducers({\n  items: transactionReducer,\n  loader: transactionsLoaderReducer,\n  error: transactionErrorReducer,\n  filter: transactionFilterReducer,\n  categoris: transactionCategories,\n});\n\nexport default transactionsRootReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/reducer';\n\nimport errorsReducer from './error/reducer';\nimport statististicsReducer from './staticstics/statisticsReducer';\nimport { encryptor } from './encryptor';\nimport transactionsRootReducer from './transactions/transactionsReducers/transactionsRootReducer';\nconst authConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n  // transforms: [encryptor],\n};\n\nconst rootReducers = combineReducers({\n  auth: persistReducer(authConfig, authReducer),\n  transactions: transactionsRootReducer,\n  errors: errorsReducer,\n  statistics: statististicsReducer,\n});\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducers';\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(thunk))\n    : applyMiddleware(thunk);\n\nexport const store = createStore(rootReducer, enhancer);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, useHistory } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { NotificationContainer } from 'react-notifications';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport './styles/index.css';\nimport { store, persistor } from './redux/store';\n\nimport Loader from './components/Loader';\n\nexport const Index = () => {\n  return (\n    <>\n      <App />\n      <NotificationContainer />\n    </>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loader />} persistor={persistor}>\n      <BrowserRouter>\n        <Index />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { lazy } from 'react';\n\nconst routes = {\n  HOME: {\n    path: `/home`,\n    component: lazy(() =>\n      import('../pages/HomePage' /* webpackChunkName: \"HomePage\" */),\n    ),\n  },\n\n  LOGIN: {\n    path: `/login`,\n    component: lazy(() =>\n      import('../pages/Login' /* webpackChunkName: \"Login\" */),\n    ),\n  },\n\n  REGISTER: {\n    path: `/register`,\n    component: lazy(() =>\n      import('../pages/Register' /* webpackChunkName: \"Register\" */),\n    ),\n  },\n  STATISTIC: {\n    path: `/statistic`,\n    component: lazy(() =>\n      import('../pages/Statictic' /* webpackChunkName: \"Statistic\" */),\n    ),\n  },\n\n  NAVIGATION: {\n    path: `/`,\n    component: lazy(() =>\n      import('../pages/Navigation' /* webpackChunkName: \"Navigation\" */),\n    ),\n  },\n  CURRENCY: {\n    path: `/currency`,\n    component: lazy(() =>\n      import('../components/Currency' /* webpackChunkName: \"Navigation\" */),\n    ),\n  },\n};\nexport default routes;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst transactionsSummaryRequest = createAction(\n  'statistics/transactionsSummaryRequest',\n);\nconst transactionsSummarySuccess = createAction(\n  'statistics/transactionsSummarySuccess',\n);\nconst transactionsSummaryError = createAction(\n  'statistics/transactionsSummaryError',\n);\n\nconst allTransactionsRequest = createAction(\n  'statistics/allTransactionsRequest',\n);\nconst allTransactionsSuccess = createAction(\n  'statistics/allTransactionsSuccess',\n);\nconst allTransactionsError = createAction('statistics/allTransactionsError');\n\nexport default {\n  transactionsSummaryRequest,\n  transactionsSummarySuccess,\n  transactionsSummaryError,\n  allTransactionsRequest,\n  allTransactionsSuccess,\n  allTransactionsError,\n};\n","import { NotificationManager } from 'react-notifications';\n// 'info', 'success', 'warning', 'error'\nconst notification = ({\n  type,\n  message = '',\n  title = '',\n  timeOut = 5000,\n  callback = () => {},\n  priority = false,\n}) => {\n  return NotificationManager[type.toLowerCase()](\n    message,\n    title,\n    timeOut,\n    callback,\n    priority,\n  );\n};\n\nexport default notification;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://sheltered-sea-54747.herokuapp.com';\n\nexport default {\n  auth: {\n    login: data => axios.post(`api/auth/sign-in`, data),\n    register: data => axios.post(`/api/auth/sign-up`, data),\n    getCurrentUser: () => axios.get('/api/users/current'),\n    logout: () => axios.delete('/api/auth/sign-out'),\n  },\n  transaction: {\n    add: data => axios.post(`/api/transactions`, data),\n    get: data => axios.get(`/api/transactions`, data),\n  },\n};\n","const isAuthenticated = state => !!state.auth.token;\nconst getLoading = state => state.auth.loading;\nconst getUser = state => state.auth.user;\nconst getBalance = state => state.auth.balance;\n\nexport default {\n  isAuthenticated,\n  getLoading,\n  getUser,\n  getBalance,\n};\n","import axios from 'axios';\nimport types from '../types';\nimport API from '../../services/api';\nimport notification from '../../services/notification';\nimport routes from '../../routes';\n\nconst token = {\n  set(authToken) {\n    axios.defaults.headers.common.Authorization = `Bearer ${authToken}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const logIn = (user, history) => async dispatch => {\n  dispatch({ type: types.LOGIN_START });\n  try {\n    const { data, status } = await API.auth.login(user);\n    // if (status < 200 && status >= 300) throw new Error('Something went wrong!');\n    dispatch({ type: types.LOGIN_SUCCESS, payload: data });\n    token.set(data.token);\n    // clearForm();\n    history.push('/home');\n    notification({\n      type: 'success',\n      message: 'Login Success!',\n    });\n  } catch (e) {\n    dispatch({ type: types.LOGIN_FAILURE, payload: e.response.data.message });\n  }\n};\nexport const register = (credentials, history) => async dispatch => {\n  dispatch({ type: types.SIGNUP_START });\n  try {\n    const { data } = await API.auth.register(credentials);\n    // if (status < 200 && status >= 300) throw new Error('Something went wrong!');\n    dispatch({ type: types.SIGNUP_SUCCESS, payload: data });\n    token.set(data.token);\n    history.push('/home');\n    notification({\n      type: 'success',\n      message: 'Register Success!',\n    });\n  } catch (e) {\n    dispatch({ type: types.SIGNUP_FAILURE, payload: e.response.data.errors });\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch({ type: types.GET_CURRENT_USER_START });\n  try {\n    const { data } = await API.auth.getCurrentUser();\n    dispatch({ type: types.GET_CURRENT_USER_SUCCESS, payload: data });\n    // notification({\n    //   type: 'success',\n    //   message: 'getCurrentUser Success!',\n    // });\n  } catch (e) {\n    dispatch({ type: types.LOGOUT_FAILURE });\n  }\n};\n\nexport const logOut = history => async dispatch => {\n  dispatch({ type: types.LOGOUT_START });\n  try {\n    const data = await API.auth.logout();\n    // if (status < 200 && status >= 300) throw new Error('Something went wrong!');\n    dispatch({ type: types.LOGOUT_SUCCESS, payload: data });\n    history.push('/login');\n    token.unset();\n    notification({\n      type: 'success',\n      message: 'Logout Success!',\n    });\n  } catch (e) {\n    dispatch({ type: types.LOGOUT_FAILURE });\n  }\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport statisticsActions from './statisticsActions';\n\nconst transactionsSummary = createReducer(\n  {},\n  {\n    [statisticsActions.transactionsSummarySuccess]: (_, action) =>\n      action.payload,\n  },\n);\n\nconst allTransactions = createReducer([], {\n  [statisticsActions.allTransactionsSuccess]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [statisticsActions.transactionsSummaryRequest]: () => true,\n  [statisticsActions.transactionsSummarySuccess]: () => false,\n  [statisticsActions.transactionsSummaryError]: () => false,\n\n  [statisticsActions.allTransactionsRequest]: () => true,\n  [statisticsActions.allTransactionsSuccess]: () => false,\n  [statisticsActions.allTransactionsError]: () => false,\n});\n\nexport default combineReducers({\n  transactionsSummary,\n  allTransactions,\n  loading,\n});\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/selectors';\nimport routes from '../routes';\n\nconst PrivateRoute = ({ component: Component }) => {\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\n\n  return (\n    <Route\n      render={() =>\n        isAuthenticated ? <Component /> : <Redirect to={routes.LOGIN.path} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","const getError = state => state.errors;\nexport default { getError };\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport errorsSelectors from '../../../redux/error/selectors';\nimport notification from '../../../services/notification';\n\nconst Error = () => {\n  const error = useSelector(errorsSelectors.getError);\n\n  useEffect(() => {\n    if (!error) return;\n    notification({\n      type: 'error',\n      message: error,\n    });\n  }, [error]);\n\n  return <></>;\n};\n\nexport default Error;\n"],"sourceRoot":""}