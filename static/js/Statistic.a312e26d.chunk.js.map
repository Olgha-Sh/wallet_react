{"version":3,"sources":["redux/staticstics/statisticsOperations.js","redux/staticstics/statisticsSelectors.js","pages/Statictic/services/selectServices.js","pages/Statictic/Select/index.js","pages/Statictic/graphColors.js","pages/Statictic/index.jsx","pages/Statictic/Select/Select.module.css","pages/Statictic/Statistics.module.css"],"names":["axios","defaults","baseURL","year","month","dispatch","a","statsticsActions","transactionsSummaryRequest","get","response","transactionsSummarySuccess","data","console","log","transactionsSummaryError","allTransactionsRequest","allTransactionsSuccess","allTransactionsError","state","statistics","allTransactions","moment","locale","SelectYrsMth","valueMonth","valueYear","monthsInRequestedYear","arrayOfDates","handleChange","e","preventDefault","target","name","value","setState","requestedYear","find","Number","this","props","onFetchAllTransactions","prevProps","assembledArrayOfYrsMths","array","i","length","j","Set","sort","splice","finalYMArrayMethod","filter","type","map","transactionDate","format","b","onFetchSummaryTransactions","className","styles","selectBlock","selectWrapper","onChange","optionYM","disabled","key","Component","connect","statisticsSelectors","statisticsOperations","graphColors","Statistics","categoriesExpenseWithColors","categoriesExpense","category","categoryWithColor","color","categoriesSummary","transactionsSummary","undefined","arrayWithColors","incomeSummary","expenseSummary","periodTotal","global","legend","display","position","labels","datasets","Math","abs","total","toFixed","backgroundColor","statisticsBlock","doughnut","statHeader","width","height","options","elements","arc","borderWidth","cutoutPercentage","stat","Select","statTable","theadStat","trStat","thStat","tbodyStat","tdStat","nameBlock","style","module","exports"],"mappings":"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","file":"static/js/Statistic.a312e26d.chunk.js","sourcesContent":["import axios from 'axios';\n\n// import API from '../../services/api';\nimport statsticsActions from './statisticsActions';\n\naxios.defaults.baseURL = 'https://sheltered-sea-54747.herokuapp.com';\n\nconst fetchTransactionsSummary = (year, month) => async dispatch => {\n  dispatch(statsticsActions.transactionsSummaryRequest());\n  try {\n    const response = await axios.get(\n      `/api/transactions-summary?month=${month}&year=${year}`,\n    );\n    dispatch(statsticsActions.transactionsSummarySuccess(response.data));\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    dispatch(statsticsActions.transactionsSummaryError(error));\n  }\n};\nconst fetchAllTransactions = () => async dispatch => {\n  dispatch(statsticsActions.allTransactionsRequest());\n  try {\n    const response = await axios.get(`/api/transactions`);\n    dispatch(statsticsActions.allTransactionsSuccess(response.data));\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    dispatch(statsticsActions.allTransactionsError(error));\n  }\n};\n\nexport default { fetchTransactionsSummary, fetchAllTransactions };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getStatistics = state => state.statistics;\nconst getAllTransactions = state => state.statistics.allTransactions;\n\nexport default {\n  getStatistics,\n  getAllTransactions,\n};\n","import moment from 'moment-with-locales-es6';\n\nmoment.locale('ru');\nexport const transactionsYearsMonths = array =>\n  array\n    .filter(({ type }) => type === 'EXPENSE')\n    .map(({ transactionDate }) => {\n      const year = moment(transactionDate, 'YYYY MM D').format('YYYY');\n      const month = moment(transactionDate, 'YYYY MM D').format('MM');\n      return { year, month: [month] };\n    })\n    .sort((a, b) => a.year - b.year);\n\nexport const finalYMArrayMethod = array => {\n  for (let i = 0; i < array.length; i += 1) {\n    for (let j = i + 1; j < array.length; j += 1) {\n      if (\n        array[i].year === array[j].year &&\n        array[i].month !== array[j].month\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        array[j].year;\n\n        // eslint-disable-next-line no-param-reassign\n        array[i].month = [\n          ...new Set([...array[i].month, ...array[j].month]),\n        ].sort();\n\n        array.splice(j, 1);\n        j = i;\n      }\n    }\n  }\n\n  return array;\n};\n","import React, { Component } from 'react';\nimport moment from 'moment-with-locales-es6';\nimport { connect } from 'react-redux';\n\nimport {\n  statisticsSelectors,\n  statisticsOperations,\n} from '../../../redux/staticstics';\n\nimport {\n  finalYMArrayMethod,\n  transactionsYearsMonths,\n} from '../services/selectServices';\n\nimport styles from './Select.module.css';\n\nmoment.locale('ru');\n\nclass SelectYrsMth extends Component {\n  state = {\n    valueMonth: 0,\n    valueYear: 0,\n    monthsInRequestedYear: [],\n    arrayOfDates: [],\n  };\n\n  componentDidMount() {\n    this.props.onFetchAllTransactions();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { valueMonth, valueYear } = this.state;\n    const { allTransactions } = this.props;\n    // const { finalYMArrayMethod, transactionsYearsMonths } = this;\n    if (allTransactions !== prevProps.allTransactions) {\n      const assembledArrayOfYrsMths = finalYMArrayMethod(\n        transactionsYearsMonths(allTransactions),\n      );\n\n      this.setState({ arrayOfDates: assembledArrayOfYrsMths });\n    }\n    if (valueMonth !== 0 && valueYear !== 0) {\n      this.props.onFetchSummaryTransactions(valueYear, valueMonth);\n    }\n  }\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    const { arrayOfDates, valueMonth, valueYear } = this.state;\n    if (name === 'valueYear') {\n      this.setState({ valueMonth: 0 });\n      const requestedYear = arrayOfDates.find(({ year }) => year === value);\n\n      this.setState({ monthsInRequestedYear: requestedYear.month });\n    }\n    this.setState({ [name]: Number(value) });\n  };\n\n  render() {\n    const {\n      valueMonth,\n      valueYear,\n      arrayOfDates,\n      monthsInRequestedYear,\n    } = this.state;\n\n    return (\n      <form className={styles.selectBlock}>\n        {/* <div className={styles.selectWrapper}> */}\n        <select\n          className={styles.selectWrapper}\n          name=\"valueMonth\"\n          // value=\"Month\"\n          onChange={this.handleChange}\n        >\n          {valueYear ? (\n            <option className={styles.optionYM} disabled={!!valueMonth}>\n              Месяц\n            </option>\n          ) : (\n            <option className={styles.optionYM}>Выберите \"год\"</option>\n          )}\n          {monthsInRequestedYear &&\n            monthsInRequestedYear.map(month => (\n              <option className={styles.optionYM} key={month} value={month}>\n                {moment(month, 'MM').format('MMMM')}\n              </option>\n            ))}\n        </select>\n        {/* </div> */}\n        {/* <div className={styles.selectWrapper}> */}\n        <select\n          className={styles.selectWrapper}\n          name=\"valueYear\"\n          onChange={this.handleChange}\n        >\n          <option className={styles.optionYM} disabled={!!valueYear}>\n            Год\n          </option>\n          {arrayOfDates.map(({ year }) => (\n            <option className={styles.optionYM} key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n        {/* </div> */}\n        {/* <button type=\"submit\">Test</button> */}\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  allTransactions: statisticsSelectors.getAllTransactions(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onFetchAllTransactions: () =>\n    dispatch(statisticsOperations.fetchAllTransactions()),\n  onFetchSummaryTransactions: (year, month) =>\n    dispatch(statisticsOperations.fetchTransactionsSummary(year, month)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectYrsMth);\n","const graphColors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n\n  '#00AD84',\n];\n\nexport default graphColors;\n","import React, { Component } from 'react';\nimport { Doughnut, defaults } from 'react-chartjs-2';\n\nimport { connect } from 'react-redux';\nimport { statisticsSelectors } from '../../redux/staticstics';\n\nimport SelectYrsMth from './Select';\nimport graphColors from './graphColors';\n\nimport styles from './Statistics.module.css';\n\nclass Statistics extends Component {\n  state = {\n    categoriesExpenseWithColors: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { statistics } = this.props;\n    const { categoriesSummary } = this.props.statistics.transactionsSummary;\n    const { categoriesExpense, categoriesExpenseWithColors } = this;\n    if (\n      statistics !== prevProps.statistics &&\n      categoriesSummary !== undefined\n    ) {\n      const array = categoriesExpense(categoriesSummary);\n      const arrayWithColors = categoriesExpenseWithColors(array);\n      this.setState({ categoriesExpenseWithColors: arrayWithColors });\n    }\n  }\n\n  categoriesExpense = array => array.filter(({ type }) => type === 'EXPENSE');\n\n  categoriesExpenseWithColors = array =>\n    array.map((category, i) => {\n      const categoryWithColor = { ...category, color: graphColors[i] };\n\n      return { categoryWithColor };\n    });\n\n  render() {\n    const { categoriesExpenseWithColors } = this.state;\n    const { transactionsSummary } = this.props.statistics;\n    const { incomeSummary, expenseSummary, periodTotal } = transactionsSummary;\n    defaults.global.legend.display = false;\n\n    defaults.global.legend.position = 'right';\n    const data = {\n      labels: categoriesExpenseWithColors.map(\n        ({ categoryWithColor }) => categoryWithColor.name,\n      ),\n      datasets: [\n        {\n          data: categoriesExpenseWithColors.map(({ categoryWithColor }) =>\n            Math.abs(categoryWithColor.total).toFixed(2),\n          ),\n          backgroundColor: graphColors,\n        },\n      ],\n    };\n    const options = {\n      elements: {\n        arc: {\n          borderWidth: 0,\n        },\n      },\n      cutoutPercentage: 75,\n    };\n\n    return (\n      <div className={styles.statisticsBlock}>\n        <div className={styles.doughnut}>\n          <div className={styles.statHeader}>Статистика</div>\n          {periodTotal && (\n            <div className={styles.periodTotal}>\n              &#x20b4; {periodTotal.toFixed(2)}\n            </div>\n          )}\n          <Doughnut data={data} width={320} height={320} options={options} />\n        </div>\n\n        <div className={styles.stat}>\n          <SelectYrsMth />\n\n          <table className={styles.statTable}>\n            <thead className={styles.theadStat}>\n              <tr className={styles.trStat}>\n                <th className={styles.thStat}>Категория</th>\n                <th className={styles.thStat}>Сумма</th>\n              </tr>\n            </thead>\n            {transactionsSummary && incomeSummary !== undefined && (\n              <tbody className={styles.tbodyStat}>\n                {categoriesExpenseWithColors.map(({ categoryWithColor }) => (\n                  <tr className={styles.trStat} key={categoryWithColor.name}>\n                    <td className={styles.tdStat}>\n                      <div className={styles.nameBlock}>\n                        <div\n                          className={styles.color}\n                          style={{ backgroundColor: categoryWithColor.color }}\n                        />\n                        <div>{categoryWithColor.name}</div>\n                      </div>\n                    </td>\n                    <td className={styles.tdStat}>\n                      {Math.abs(categoryWithColor.total).toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n                <tr className={styles.trStat}>\n                  <td className={styles.tdStat}>Расходы:</td>\n                  <td className={styles.tdStat}>\n                    {Math.abs(expenseSummary).toFixed(2)}\n                  </td>\n                </tr>\n                <tr className={styles.trStat}>\n                  <td className={styles.tdStat}>Доходы:</td>\n                  <td className={styles.tdStat}>{incomeSummary.toFixed(2)}</td>\n                </tr>\n              </tbody>\n            )}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  statistics: statisticsSelectors.getStatistics(state),\n  // transactionsSummary: statisticsSelectors.getTransactionsSummary(state),\n  // categoriesSummary: statisticsSelectors.getCategoriesSummary(state),\n  // incomeSummary: statisticsSelectors.getIncomeSummary(state),\n  // expenseSummary: statisticsSelectors.getExpenseSummary(state),\n  // periodTotal: statisticsSelectors.getPeriodTotal(state),\n});\nexport default connect(mapStateToProps)(Statistics);\n// export default Statistics;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectBlock\":\"Select_selectBlock__2q6Rn\",\"selectWrapper\":\"Select_selectWrapper__2AKdg\",\"optionYM\":\"Select_optionYM__3w0Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsBlock\":\"Statistics_statisticsBlock__3Dn3Y\",\"statHeader\":\"Statistics_statHeader__1qTfw\",\"periodTotal\":\"Statistics_periodTotal__1_TTO\",\"stat\":\"Statistics_stat__3Y__y\",\"statTable\":\"Statistics_statTable__2CKJi\",\"theadStat\":\"Statistics_theadStat__1sQIB\",\"thStat\":\"Statistics_thStat__1a1ul\",\"tbodyStat\":\"Statistics_tbodyStat__3Hntt\",\"trStat\":\"Statistics_trStat__XDzlM\",\"tdStat\":\"Statistics_tdStat__1frKM\",\"nameBlock\":\"Statistics_nameBlock__zJnDa\",\"color\":\"Statistics_color__lUQ2l\",\"doughnut\":\"Statistics_doughnut__29-Z8\"};"],"sourceRoot":""}